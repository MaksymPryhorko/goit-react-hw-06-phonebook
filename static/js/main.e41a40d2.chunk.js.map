{"version":3,"sources":["Phonebook/ContactList/ContactList.module.css","Phonebook/Filter/Filter.module.css","Phonebook/Phonebook.module.css","redux/contacts-actions.js","Phonebook/Form/Form.jsx","Phonebook/ContactList/ContactList.jsx","Phonebook/ContactList/ContactList.container.js","Phonebook/Filter/Filter.jsx","Phonebook/Phonebook.jsx","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Phonebook/Form/Form.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","firstLoadContact","connect","items","contacts","dispatch","onSubmit","item","contactsActions","useState","name","setName","number","setNumber","useSelector","state","handleChange","e","currentTarget","value","reset","className","style","mainForm","preventDefault","undefined","find","toLowerCase","id","uuidv4","alert","labelForm","inputForm","type","pattern","title","required","onChange","buttonForm","ContactList","onDelete","map","contactListItem","btnDeleteContact","onClick","numberPhone","visibleContacts","allContacts","filter","normalizedFilter","includes","getVisibleContacts","target","filterContainer","labelFilter","inputFilter","loadContactsOfLocStor","mainSection","containerContacts","App","createReducer","actionTypes","payload","contact","_","combineReducers","middleWare","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e41a40d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnDeleteContact\":\"ContactList_btnDeleteContact__106Vb\",\"contactListItem\":\"ContactList_contactListItem__3-f_n\",\"numberPhone\":\"ContactList_numberPhone__2E0Nw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__1y55a\",\"labelFilter\":\"Filter_labelFilter__2SMlI\",\"inputFilter\":\"Filter_inputFilter__WTXWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSection\":\"Phonebook_mainSection__3WmEs\",\"containerContacts\":\"Phonebook_containerContacts__nq7M4\"};","import { createAction } from \"@reduxjs/toolkit\";\nconst addContact = createAction(\"contacts/add\");\nconst deleteContact = createAction(\"contacts/delete\");\nconst changeFilter = createAction(\"contacts/changeFilter\");\nconst firstLoadContact = createAction(\"contacts/firstLoad\");\n\nexport default { addContact, deleteContact, changeFilter, firstLoadContact };\n","import { useState, useSelector } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Form.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts-actions\";\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const items = useSelector((state) => state.contacts.items);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const checkedDuplicate = () => {\r\n    return items.find((item) => item.name.toLowerCase() === name.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (checkedDuplicate() !== undefined) {\r\n      alert(`${name} is alreade in contacts.`);\r\n      return;\r\n    }\r\n\r\n    onSubmit({\r\n      name,\r\n      id: uuidv4(),\r\n      number,\r\n    });\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={style.mainForm} onSubmit={handleSubmit}>\r\n      <label className={style.labelForm}>\r\n        <input\r\n          className={style.inputForm}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        Name\r\n      </label>\r\n      <label className={style.labelForm}>\r\n        <input\r\n          className={style.inputForm}\r\n          value={number}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n        Number\r\n      </label>\r\n      <button className={style.buttonForm} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => ({ items: contacts.items });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (item) => dispatch(contactsActions.addContact(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ items, onDelete }) {\r\n  return (\r\n    <ul>\r\n      {items.map((item) => (\r\n        <li key={item.id} className={style.contactListItem}>\r\n          <button\r\n            className={style.btnDeleteContact}\r\n            type=\"button\"\r\n            onClick={() => onDelete(item.id)}\r\n          >\r\n            delete\r\n          </button>\r\n          {item.name}: <span className={style.numberPhone}>{item.number}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts-actions\";\nimport ContactList from \"./ContactList\";\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = ({ contacts }) => {\n  const { items, filter } = contacts;\n  const visibleContacts = getVisibleContacts(items, filter);\n\n  return {\n    items: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(contactsActions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\nimport contactsActions from \"../../redux/contacts-actions\";\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  return (\r\n    <div className={style.filterContainer}>\r\n      <label className={style.labelFilter}>\r\n        <input\r\n          className={style.inputFilter}\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={onChange}\r\n        />\r\n        Find contacts by name\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => {\r\n  return {\r\n    filter: contacts.filter,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { connect } from \"react-redux\";\r\nimport Form from \"./Form\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactList from \"./ContactList\";\r\nimport Filter from \"./Filter\";\r\nimport style from \"./Phonebook.module.css\";\r\nimport contactsActions from \"../redux/contacts-actions\";\r\n\r\nfunction Phonebook({ items, loadContactsOfLocStor }) {\r\n  return (\r\n    <section className={style.mainSection}>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n\r\n      <div className={style.containerContacts}>\r\n        <h2>Contacts:</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nPhonebook.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n  loadContactsOfLocStor: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ items: state.contacts.items });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadContactsOfLocStor: (item) =>\r\n    dispatch(contactsActions.firstLoadContact(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\nimport Phonebook from \"./Phonebook\";\n\nexport default function App() {\n  return <Phonebook />;\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actionTypes from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [actionTypes.addContact]: (state, { payload }) => [...state, payload],\n  [actionTypes.deleteContact]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n  [actionTypes.firstLoadContact]: (state, { payload }) => [\n    ...state,\n    ...payload,\n  ],\n});\n\nconst filter = createReducer(\"\", {\n  [actionTypes.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts-reducer\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nimport { getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\n\nconst middleWare = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsConfig, contactsReducer),\n  },\n  middleWare,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Form_mainForm__2nmTN\",\"labelForm\":\"Form_labelForm__8dgPV\",\"inputForm\":\"Form_inputForm__1x4JT\",\"buttonForm\":\"Form_buttonForm__1OhVh\"};"],"sourceRoot":""}